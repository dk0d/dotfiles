#!/usr/bin/env sh
#YABAI STUFF

# Resources:
# https://www.youtube.com/watch?v=JL1lz77YbUE
# https://www.notion.so/Yabai-8da3b829872d432fac43181b7ff628fc
# https://github.com/rtauziac/Hammerspoon-Yabai

# bsp or float (default: bsp)
# yabai -m config layout bsp

# My custom space names for my 3 monitor setup. These names are used in some of my scripts.
yabai -m space 1 --label one
yabai -m space 2 --label two
yabai -m space 3 --label three
yabai -m space 4 --label four
yabai -m space 5 --label five
yabai -m space 6 --label six
yabai -m space 7 --label seven

# float system preferences. Most of these just diable Yabai form resizing them.
yabai -m rule --add app="^System Settings$" sticky=on layer=above manage=off
yabai -m rule --add app="^Weather$" sticky=on layer=above manage=off
yabai -m rule --add app="^Finder$" sticky=on layer=above manage=off
yabai -m rule --add app="^Disk Utility$" sticky=on layer=above manage=off
yabai -m rule --add app="^System Information$" sticky=on layer=above manage=off
yabai -m rule --add app="^Activity Monitor$" sticky=on layer=above manage=off
yabai -m rule --add app="^Path Finder$" manage=off
yabai -m rule --add app="^TeamViewer$" sticky=off layer=above manage=off
yabai -m rule --add app="Fantastical" manage=off
yabai -m rule --add app="^Spotify$" manage=off
# yabai -m rule --add app="^iTerm2$" manage=off
yabai -m rule --add app="^Flux$" manage=off
yabai -m rule --add app="^Time Out$" manage=off
yabai -m rule --add app="^perl_client_app$" manage=off
yabai -m rule --add app="^console$" manage=off
yabai -m rule --add app="^Harvest$" manage=off
yabai -m rule --add app="^SparkHelper$" manage=off
yabai -m rule --add app="^Logi Options$" manage=off
yabai -m rule --add app="^Cisco AnyConnect" manage=off
yabai -m rule --add app="^Private Internet Access$" manage=off
yabai -m rule --add app="^1Password$" manage=off
yabai -m rule --add app="^Cardhop$" manage=off

yabai -m rule --add app="^PyCharm$" title="Interpreters$" manage=off
yabai -m rule --add app="^PyCharm$" title="SSH" manage=off
yabai -m rule --add app="^PyCharm$" title="Remote" manage=off
yabai -m rule --add app="^PyCharm$" title="Add" manage=off
yabai -m rule --add app="^PyCharm$" title="New" manage=off
yabai -m rule --add app="^PyCharm$" title="Move" manage=off
yabai -m rule --add app="^PyCharm$" title="Rename" manage=off
yabai -m rule --add app="^PyCharm$" title="Find" manage=off
yabai -m rule --add app="^PyCharm$" title="Push" manage=off
yabai -m rule --add app="^PyCharm$" title="^Diff Between" manage=off
yabai -m rule --add app="^PyCharm$" title="Configur" manage=off
yabai -m rule --add app="^PyCharm$" title="Settings" manage=off
yabai -m rule --add app="^PyCharm$" title="Plugin" manage=off

yabai -m rule --add app="^python3" manage=off

yabai -m rule --add app="^AppCode$" title="Interpreters$" manage=off
yabai -m rule --add app="^AppCode$" title="SSH" manage=off
yabai -m rule --add app="^AppCode$" title="Remote" manage=off
yabai -m rule --add app="^AppCode$" title="Add" manage=off
yabai -m rule --add app="^AppCode$" title="New" manage=off
yabai -m rule --add app="^AppCode$" title="Configure" manage=off
yabai -m rule --add app="^AppCode$" title="Move" manage=off
yabai -m rule --add app="^AppCode$" title="Rename" manage=off
yabai -m rule --add app="^AppCode$" title="Find" manage=off
yabai -m rule --add app="^AppCode$" title="Push" manage=off
yabai -m rule --add app="^AppCode$" title="Manage Targets" manage=off
yabai -m rule --add app="^AppCode$" title="Memory" manage=off
yabai -m rule --add app="^AppCode$" title="Keymap" manage=off
yabai -m rule --add app="^AppCode$" title="Merge" manage=off
yabai -m rule --add app="^AppCode$" title="Conflict" manage=off
yabai -m rule --add app="^AppCode$" title="Settings" manage=off
yabai -m rule --add app="^AppCode$" title="Config" manage=off

yabai -m rule --add app="^DaisyDisk$" manage=off

yabai -m rule --add app="^JetBrains Toolbox$" manage=off
yabai -m rule --add app="^Music$" manage=off
yabai -m rule --add app="^Clockify Desktop$" manage=off
yabai -m rule --add app="^python*" manage=off

yabai -m rule --add app="Microsoft Teams" manage=off

yabai -m rule --add app="Stats" manage=off

# iOS Simulator
yabai -m rule --add app="^Simulator$" manage=off
yabai -m rule --add app="^Zotero$" title="General" manage=off
yabai -m rule --add app="^Zotero$" title="Sync" manage=off
yabai -m rule --add app="^Zotero$" title="Search" manage=off
yabai -m rule --add app="^Zotero$" title="Export" manage=off
yabai -m rule --add app="^Zotero$" title="Cite" manage=off
yabai -m rule --add app="^Zotero$" title="Advanced" manage=off
yabai -m rule --add app="^Zotero$" title="Better Bibtex" manage=off
yabai -m rule --add app="^Zotero$" title="Add-ons Manager" manage=off
yabai -m rule --add app="^Zotero$" title="Annotat" manage=off

yabai -m rule --add app="^Mail$" title="General" manage=off
yabai -m rule --add app="^Mail$" title="Accounts" manage=off
yabai -m rule --add app="^Mail$" title="Junk" manage=off
yabai -m rule --add app="^Mail$" title="Fonts" manage=off
yabai -m rule --add app="^Mail$" title="View" manage=off
yabai -m rule --add app="^Mail$" title="Compos" manage=off
yabai -m rule --add app="^Mail$" title="Sign" manage=off
yabai -m rule --add app="^Mail$" title="Rules" manage=off
yabai -m rule --add app="^Mail$" title="Ext" manage=off
yabai -m rule --add app="^Mail$" title="Privacy" manage=off

yabai -m rule --add app="^Publish or Perish$" manage=off

yabai -m rule --add app="^OpenVPN Connect$" manage=off

yabai -m rule --add title="Find" manage=off
yabai -m rule --add title="Preferences$" manage=off
yabai -m rule --add title="^Problem Report for" manage=off
# yabai -m rule --add title="^Dash$" manage=off

## Some random global settings
#yabai -m config focus_follows_mouse          autoraise
# New window spawns to the right if vertical split, or bottom if horizontal split
yabai -m config window_placement second_child
yabai -m config focus_follows_mouse on
yabai -m config window_topmost off
#yabai -m config window_shadow float
yabai -m config window_opacity off
yabai -m config window_opacity_duration 0.00
yabai -m config active_window_opacity 1.0

#yabai -m config normal_window_opacity        0.97
#yabai -m config window_border                on | off

## WITH SIP ENABLED (Installed Limelight seperately, Don't need this)
yabai -m config window_border off

## WTIH SIP DISABLED (Limelight build into Yabai, enable it here)
#yabai -m config window_border on
#yabai -m config window_border_width 3
#yabai -m config active_window_border_color 0xFF40FF00
#yabai -m config normal_window_border_color 0x00FFFFFF
#yabai -m config insert_feedback_color        0xffd75f5f

## some other settings
yabai -m config auto_balance off
yabai -m config split_ratio 0.50
# # set mouse interaction modifier key (default: fn)
yabai -m config mouse_modifier ctrl
# set modifier + right-click drag to resize window (default: resize)
yabai -m config mouse_action2 resize
# set modifier + left-click drag to resize window (default: move)
yabai -m config mouse_action1 move

# general space settings
#yabai -m config focused_border_skip_floating  1
#yabai -m config --space 3 layout             float

## Change how yabai looks
yabai -m config layout bsp
yabai -m config top_padding 2
yabai -m config bottom_padding 2
yabai -m config left_padding 2
yabai -m config right_padding 2
yabai -m config window_gap 4

#Limelight addon (Kill it and start it each time Yabai starts)
killall limelight &
>/dev/null
limelight &
>/dev/null &

# #Ubersicht widget bar stuff
#yabai -m signal --add event=space_changed \
#action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"nibar-spaces-primary-jsx\"'"
#yabai -m signal --add event=display_changed \
#action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"nibar-spaces-primary-jsx\"'"

#yabai -m signal --add event=space_changed \
#action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"nibar-spaces-secondary-jsx\"'"
#yabai -m signal --add event=display_changed \
#action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"nibar-spaces-secondary-jsx\"'"

# signals
# yabai -m signal --add event=window_destroyed action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"
# yabai -m signal --add event=space_changed action="yabai -m window --focus $(yabai -m query --windows --window | jq ".id")"
# yabai -m signal --add event=application_terminated action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"

#testing signals
# yabai -m signal --add event=window_destroyed action="terminal-notifier -message 'window_destroyed'"
# yabai -m signal --add event=application_terminated action="terminal-notifier -message 'application_terminated'"

## If I close the active window, focus on any other visible window.
# yabai -m signal --add event=window_destroyed action="bash /Users/jesseskelton/CustomScripts/SwitchSpaces/window-focus-on-destroy.sh"
# yabai -m signal --add event=space_changed action="export CUR_ACTIVE_APP=\"iTerm2\""
#
#
#

# Hammerspoon signals
yabai -m signal --add event=window_focused action="hs -c \"yabaidirectcall.window_focused(\`printenv YABAI_WINDOW_ID\`)\""
yabai -m signal --add event=application_activated action="hs -c \"yabaidirectcall.application_activated(\`printenv YABAI_PROCESS_ID\`)\""
yabai -m signal --add event=window_resized action="hs -c \"yabaidirectcall.window_resized(\`printenv YABAI_WINDOW_ID\`)\""
yabai -m signal --add event=window_moved action="hs -c \"yabaidirectcall.window_moved(\`printenv YABAI_WINDOW_ID\`)\""
yabai -m signal --add event=window_destroyed action="hs -c \"yabaidirectcall.window_destroyed(\`printenv YABAI_WINDOW_ID\`)\""

echo "yabai configuration loaded.."

#END
