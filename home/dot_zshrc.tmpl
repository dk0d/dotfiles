# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME=""
HYPHEN_INSENSITIVE="true"
DISABLE_UNTRACKED_FILES_DIRTY="true"
HIST_STAMPS="yyyy-mm-dd"
source $ZSH/oh-my-zsh.sh

############### User configuration ####################

fpath=("$HOME/.zfunc" "${fpath[@]}")

{{ template "shell-env.sh" . }}

force_color_prompt=yes
if [ -n "$force_color_prompt" ]; then
	if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
		# We have color support; assume it's compliant with Ecma-48
		# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
		# a case would tend to support setf rather than setaf.)
		color_prompt=yes
	else
		color_prompt=
	fi
fi

{{ template "shell-mamba.sh" . }}

{{ if eq .chezmoi.os "linux" -}}

# Do before aliases so they are present in path
if [[ -f /home/linuxbrew/.linuxbrew/bin/brew ]]; then
	eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
fi

if command -v fzf &>/dev/null; then
 source <(fzf --zsh)
fi 

{{ end -}}

if command -v starship &>/dev/null; then
	eval "$(starship init zsh)"
fi
 
{{ template "shell-aliases.sh" . }}

{{ template "shell-functions.sh" . }}

{{ template "shell-starship.sh" . }}


# zsh-autosuggestions
if [[ -d $HOME/.zsh/zsh-autosuggestions ]]; then
	source $HOME/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
fi

# zsh-syntax-highlighting
if [[ -d $HOME/.zsh/zsh-syntax-highlighting ]]; then
	source $HOME/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi

if command -v op &>/dev/null; then
	eval "$(op completion zsh)"; compdef _op op
fi 

if [[ -f $HOME/.config/op/plugins.sh ]]; then
	source $HOME/.config/op/plugins.sh
fi

{{ template "shell-nvm.sh" . }}

{{ if eq .chezmoi.os "darwin" -}}

# export PATH=$PATH:/opt/homebrew/opt/python@3.11/libexec/bin
export LDFLAGS="-L/opt/homebrew/opt/libomp/lib"
export CPPFLAGS="-I/opt/homebrew/opt/libomp/include"
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

if [[ -f ~/.hatch-complete.zsh ]]; then
	source ~/.hatch-complete.zsh
fi

{{ template "shell-mojo.sh" . }}

{{ end -}}

# pnpm
if command -v pnpm &>/dev/null; then
	export PNPM_HOME="$HOME/.pnpm-global"
	case ":$PATH:" in
  	*":$PNPM_HOME:"*) ;;
  	*) export PATH="$PNPM_HOME:$PATH" ;;
	esac
	pnpm config set pnpm-prefix "$PNPM_HOME"
fi
# pnpm end

export XDG_CONFIG_HOME="$HOME/.config"

[ -f "$HOME/.zshrc.local" ] && source "$HOME/.zshrc.local"
