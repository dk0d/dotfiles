# set-option -g default-terminal "tmux-256color"
# set-option -ga terminal-overrides ",tmux*:Tc"
set-option -g default-terminal "tmux-256color"
set-option -ag terminal-overrides ",xterm-256color:RGB"
set-option -g default-shell "${SHELL}"

# set-option -g pane-border-style bg=default
# set-option -g pane-active-border-style fg=colour240
# set-option -g display-panes-active-colour colour33

# set -g window-status-style bg=default

# set-option -g default-terminal "tmux-256color"
# set-option -ga terminal-overrides ",tmux*:Tc"

# this prevents tmux from starting a login shell
set -g default-command "${SHELL}"

# macOS / darwin style
set -g status-position top

setw -g xterm-keys on
set -s escape-time 0                     # faster command sequences
set -sg repeat-time 600                   # increase repeat timeout
set -s focus-events on

# vim-like pane switching
bind -r ^ last-window
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R


# Mouse support
set -g mouse on

# forget the find window.  That is for chumps
bind-key -r f run-shell "tmux neww tmux-sessionizer"

# ask questions of the internet
bind-key -r i run-shell "tmux neww tmux-cht"

# bind -r D neww -c "#{pane_current_path}" "[[ -e TODO.md ]] && nvim TODO.md || nvim ~/.dotfiles/personal/todo.md"
bind-key -r D run-shell "tmux-sessionizer $(chezmoi source-path)"

# index windwos from 1
set -g base-index 1

# renumber windows when one is closed
set -g renumber-windows on

# set vi mode - need this for copy mode to work
setw -g mode-keys vi

# create session
bind C-c new-session

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# activity
set -g monitor-activity on
set -g visual-activity off

# Layouts
set-window-option -g main-pane-height '85%'
set-window-option -g main-pane-width '85%' 

# split current window horizontally
bind - split-window -v -c "#{pane_current_path}"
bind -r "{" select-layout main-vertical

# split current window vertically
bind | split-window -h -c "#{pane_current_path}"
bind -r "}" select-layout main-horizontal

# edit configuration
bind e new-window -n "#{TMUX_CONF_LOCAL}" sh -c '${EDITOR:-nvim} "$TMUX_CONF_LOCAL" && "$TMUX_PROGRAM" ${TMUX_SOCKET:+-S "$TMUX_SOCKET"} source "$TMUX_CONF" \; display "$TMUX_CONF_LOCAL sourced"'

# reload configuration
bind r run '"$TMUX_PROGRAM" ${TMUX_SOCKET:+-S "$TMUX_SOCKET"} source "$TMUX_CONF"' \; display "#{TMUX_CONF} sourced"

# -- copy mode -----------------------------------------------------------------
bind Enter copy-mode # enter copy mode

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-selection-and-cancel
# bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line

# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to Wayland clipboard
if -b 'command -v wl-copy > /dev/null 2>&1' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - | wl-copy"'
# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - | reattach-to-usernamespace pbcopy"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - > /dev/clipboard"'

# -- Plugins -----------------------------------------------------------------

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'dk0d/tmux-theme'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect' # save and restore tmux environment
set -g @plugin 'tmux-plugins/tmux-continuum' # continuous saving of tmux env
set -g @plugin 'christoomey/vim-tmux-navigator'

set -g @resurrect-strategy-nvim 'session' # save nvim sessions

set -g @catppuccin_flavour 'kanagawa'
set -g @catppuccin_icon_window_last "󰖰"
set -g @catppuccin_icon_window_current "󰖯"
set -g @catppuccin_icon_window_zoom "󰁌"
set -g @catppuccin_icon_window_mark "󰃀"
set -g @catppuccin_icon_window_silent "󰂛"
set -g @catppuccin_icon_window_activity "󰖲"
set -g @catppuccin_icon_window_bell "󰂞"

set -g @catppuccin_window_left_separator  " "
set -g @catppuccin_window_middle_separator " "
set -g @catppuccin_window_right_separator " "
set -g @catppuccin_window_right_separator_inverse "no"
set -g @catppuccin_window_number_position "left"
set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_window_current_text "#{pane_current_path}"

set -g @catppuccin_status_modules_right "application session user host date_time"
set -g @catppuccin_status_left_separator " "
set -g @catppuccin_status_middle_separator " "
set -g @catppuccin_status_right_separator " "
set -g @catppuccin_status_right_separator_inverse "no"
set -g @catppuccin_status_fill "icon"
set -g @catppuccin_status_connect_separator "no"

set -g @catppuccin_date_time_text "%Y.%m.%d %H:%M"

run '~/.tmux/plugins/tpm/tpm'

set-option -g status-style bg=default
set-window-option -g window-status-style bg=default
set-window-option -g window-status-current-style bg=default
